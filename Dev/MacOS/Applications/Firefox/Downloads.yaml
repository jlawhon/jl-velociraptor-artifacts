name: Dev.MacOS.Applications.Firefox.Downloads
description: |
  Read all Users Firefox download history.

type: CLIENT

parameters:
  - name: placesGlobs
    default: /Library/Application Support/Firefox/Profiles/*/places.sqlite
  - name: urlSQLQuery
    default: |
        SELECT * FROM moz_annos,moz_anno_attributes,moz_places WHERE moz_annos.place_id=moz_places.id AND moz_annos.anno_attribute_id=moz_anno_attributes.id
  - name: userRegex
    default: .
  - name: URLRegex
    default: .

reference:
  - Based on built-in Windows.Applications.Firefox.Downloads

author: https://github.com/jlawhon

precondition: SELECT OS From info() where OS = 'darwin'

sources:
  - query: |
        LET places_files = SELECT * from foreach(
            row={
                SELECT Name as User, expand(path=HomeDir) AS HomeDirectory
                FROM Artifact.MacOS.System.Users()
                WHERE Name =~ userRegex
            },
            query={
                SELECT User, OSPath, Mtime
                FROM glob(root=HomeDirectory, globs=placesGlobs)
            })

        LET metaData = SELECT * FROM foreach(row=places_files,
            query={
                SELECT parse_json(data=content)
                FROM sqlite(file=OSPath, query=urlSQLQuery)
                WHERE name = 'downloads/metaData'
            })

        SELECT * FROM foreach(row=places_files,
            query={
                SELECT User,
                    timestamp(epoch=dateAdded) as startTime,
                    if(condition=name=~'metaData',then=timestamp(epoch=parse_json(data=content).endTime)) AS endTime,
                    timestamp(epoch=lastModified) as last_modified,
                    id,
                    name,
                    url,
                    place_id,
                    if(condition=name=~'metaData',then=parse_json(data=content).fileSize) AS fileSize,
                    if(condition=name=~'metaData',then=parse_json(data=content).state) AS state,
                    if(condition=name=~'destinationFileURI',then=content) AS localDirectory,
                    flags,
                    expiration,
                    type
                FROM sqlite(file=OSPath,query=urlSQLQuery)
                ORDER BY last_modified DESC
            })
        WHERE url =~ URLRegex